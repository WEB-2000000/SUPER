{
  "entities": {
    "UserProfile": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "UserProfile",
      "type": "object",
      "description": "Stores core user information.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the UserProfile entity."
        },
        "name": {
          "type": "string",
          "description": "The user's name."
        },
        "age": {
          "type": "number",
          "description": "The user's age."
        },
        "primaryGoal": {
          "type": "string",
          "description": "The user's primary goal (e.g., get fit, learn a language)."
        }
      },
      "required": [
        "id",
        "name",
        "age",
        "primaryGoal"
      ]
    },
    "DailyRoutine": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "DailyRoutine",
      "type": "object",
      "description": "Stores a user's daily routine generated by AI.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the DailyRoutine entity."
        },
        "userProfileId": {
          "type": "string",
          "description": "Reference to UserProfile. (Relationship: UserProfile 1:N DailyRoutine)"
        },
        "date": {
          "type": "string",
          "description": "The date for which this routine is generated.",
          "format": "date-time"
        },
        "tasks": {
          "type": "array",
          "description": "A list of Task IDs in the routine",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "id",
        "userProfileId",
        "date",
        "tasks"
      ]
    },
    "Task": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Task",
      "type": "object",
      "description": "Represents a single task within a daily routine.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Task entity."
        },
        "dailyRoutineId": {
          "type": "string",
          "description": "Reference to DailyRoutine. (Relationship: DailyRoutine 1:N Task)"
        },
        "description": {
          "type": "string",
          "description": "A description of the task."
        },
        "category": {
          "type": "string",
          "description": "The category of the task (e.g., learning, sport, work)."
        },
        "suggestedTime": {
          "type": "string",
          "description": "The suggested time for the task."
        },
        "isComplete": {
          "type": "boolean",
          "description": "Indicates whether the task is completed."
        }
      },
      "required": [
        "id",
        "dailyRoutineId",
        "description",
        "category",
        "suggestedTime",
        "isComplete"
      ]
    },
    "Achievement": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Achievement",
      "type": "object",
      "description": "Represents an achievement a user can unlock.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Achievement entity."
        },
        "name": {
          "type": "string",
          "description": "The name of the achievement."
        },
        "description": {
          "type": "string",
          "description": "A description of the achievement."
        },
        "xpReward": {
          "type": "number",
          "description": "The XP reward for unlocking the achievement."
        },
        "condition": {
          "type": "string",
          "description": "The condition required to unlock the achievement (e.g., complete 7 tasks in a week)."
        }
      },
      "required": [
        "id",
        "name",
        "description",
        "xpReward",
        "condition"
      ]
    },
    "UserAchievement": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "UserAchievement",
      "type": "object",
      "description": "Connects a UserProfile to an Achievement they have unlocked.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the UserAchievement entity."
        },
        "userProfileId": {
          "type": "string",
          "description": "Reference to UserProfile. (Relationship: UserProfile 1:N UserAchievement)"
        },
        "achievementId": {
          "type": "string",
          "description": "Reference to Achievement. (Relationship: Achievement 1:N UserAchievement)"
        },
        "achievedDate": {
          "type": "string",
          "description": "The date when the achievement was unlocked.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "userProfileId",
        "achievementId",
        "achievedDate"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "UserProfile",
          "schema": {
            "$ref": "#/backend/entities/UserProfile"
          },
          "description": "Stores user profile information. Path-based ownership ensures only the user can access their profile.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier of the user."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/routines/{routineId}",
        "definition": {
          "entityName": "DailyRoutine",
          "schema": {
            "$ref": "#/backend/entities/DailyRoutine"
          },
          "description": "Stores daily routines for a user. Path-based ownership ensures only the user can access their routines.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier of the user."
            },
            {
              "name": "routineId",
              "description": "The unique identifier of the daily routine."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/routines/{routineId}/tasks/{taskId}",
        "definition": {
          "entityName": "Task",
          "schema": {
            "$ref": "#/backend/entities/Task"
          },
          "description": "Stores tasks for a specific daily routine. Path-based ownership ensures only the user can access their tasks.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier of the user."
            },
            {
              "name": "routineId",
              "description": "The unique identifier of the daily routine."
            },
            {
              "name": "taskId",
              "description": "The unique identifier of the task."
            }
          ]
        }
      },
      {
        "path": "/achievements/{achievementId}",
        "definition": {
          "entityName": "Achievement",
          "schema": {
            "$ref": "#/backend/entities/Achievement"
          },
          "description": "Stores global achievement definitions. Accessible to all users.",
          "params": [
            {
              "name": "achievementId",
              "description": "The unique identifier of the achievement."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/user_achievements/{userAchievementId}",
        "definition": {
          "entityName": "UserAchievement",
          "schema": {
            "$ref": "#/backend/entities/UserAchievement"
          },
          "description": "Stores the achievements unlocked by a user. Path-based ownership ensures only the user can access their unlocked achievements.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier of the user."
            },
            {
              "name": "userAchievementId",
              "description": "The unique identifier of the user achievement."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is designed to securely manage user profiles, daily routines, tasks, achievements, and user-specific achievements. It prioritizes authorization independence, clarity, and scalability, using denormalization to avoid complex security rules. The structure also optimizes list operations, which are essential for displaying data in the UI, following the principle that rules are not filters (QAPs).\n\nUser-owned data is organized under the `/users/{userId}` path, including `UserProfile`, `DailyRoutine`, and `Task` collections. This ensures that only the authenticated user can access their own data. Achievements are global and stored in the `/achievements` collection, while `/user_achievements` connects users to specific achievements, using the user ID for path-based ownership and easy querying.\n\n**Authorization Independence:** The structure avoids `get()` calls in security rules. For example, `DailyRoutine` documents do not need to read the `UserProfile` document to determine authorization because the routine is stored under `/users/{userId}/routines/{routineId}`. Similarly, `Task` documents are stored under their respective routine `/users/{userId}/routines/{routineId}/tasks/{taskId}`, ensuring they inherit ownership without needing to fetch data from the parent. This design enables atomic operations and simplifies security rules.\n\n**QAPs (Rules are not Filters):** The path-based ownership of `DailyRoutine` and `Task` collections under `/users/{userId}` ensures secure list operations.  The rules can efficiently filter data based on the `userId` without needing complex filtering logic in the rules themselves.  Achievements are global and can be listed securely, while user achievements are listed under the user's ID, allowing for secure and efficient display of a user's achievements."
  }
}